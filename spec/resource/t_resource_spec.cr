require "../spec_helper.cr"
require "../../src/sprockets/resource.cr"

describe "Resource" do
  describe "remove_comments" do
    it "application.css" do
      filename = "spec/resource/application.css"
      resource = Sprockets::Resource.new()
      data = resource.read_plain(filename)
      data = resource.remove_comments(data)
      data.join("\n").should eq "@charset \"UTF-8\";\nhtml {\nfont-family: sans-serif;\n-ms-text-size-adjust: 100%;\n-webkit-text-size-adjust: 100%; }\nbody {\nmargin: 0; }\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\ndisplay: block; }\naudio,\ncanvas,\nprogress,\nvideo {\ndisplay: inline-block;\nvertical-align: baseline; }\naudio:not([controls]) {\ndisplay: none;\nheight: 0; }\n[hidden],\ntemplate {\ndisplay: none; }\na {\nbackground-color: transparent; }\na:active,\na:hover {\noutline: 0; }\nabbr[title] {\nborder-bottom: 1px dotted; }"
    end

    it "application.js" do
      filename = "spec/resource/application.js"
      resource = Sprockets::Resource.new()
      data = resource.read_plain(filename)
      data = resource.remove_comments(data)
      data.join("\n").should eq "(function( window, undefined ) {\nvar\nreadyList,\nrootjQuery,\ncore_strundefined = typeof undefined,\ndocument = window.document,\nlocation = window.location,\n_jQuery = window.jQuery,\n_$ = window.$,\nclass2type = {},\ncore_deletedIds = [],\ncore_version = \"1.9.1\",\ncore_concat = core_deletedIds.concat,\ncore_push = core_deletedIds.push,\ncore_slice = core_deletedIds.slice,\ncore_indexOf = core_deletedIds.indexOf,\ncore_toString = class2type.toString,\ncore_hasOwn = class2type.hasOwnProperty,\ncore_trim = core_version.trim,\njQuery = function( selector, context ) {\nreturn new jQuery.fn.init( selector, context, rootjQuery );\n},\ncore_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\ncore_rnotwhite = /\\S+/g,\nrtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\nrquickExpr = /^(?:(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\nrsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\nrvalidchars = /^[\\],:{}\\s]*$/,\nrvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\nrvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,\nrvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,\nrmsPrefix = /^-ms-/,\nrdashAlpha = /-([\\da-z])/gi,\nfcamelCase = function( all, letter ) {\nreturn letter.toUpperCase();\n},\ncompleted = function( event ) {\nif ( document.addEventListener || event.type === \"load\" || document.readyState === \"complete\" ) {\ndetach();\njQuery.ready();\n}\n},\ndetach = function() {\nif ( document.addEventListener ) {\ndocument.removeEventListener( \"DOMContentLoaded\", completed, false );\nwindow.removeEventListener( \"load\", completed, false );\n} else {\ndocument.detachEvent( \"onreadystatechange\", completed );\nwindow.detachEvent( \"onload\", completed );\n}\n};\njQuery.fn.init.prototype = jQuery.fn;\njQuery.extend = jQuery.fn.extend = function() {\nvar src, copyIsArray, copy, name, options, clone,\ntarget = arguments[0] || {},\ni = 1,\nlength = arguments.length,\ndeep = false;\nif ( typeof target === \"boolean\" ) {\ndeep = target;\ntarget = arguments[1] || {};\ni = 2;\n}\nif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\ntarget = {};\n}\nif ( length === i ) {\ntarget = this;\n--i;\n}\nfor ( ; i < length; i++ ) {\nif ( (options = arguments[ i ]) != null ) {\nfor ( name in options ) {\nsrc = target[ name ];\ncopy = options[ name ];\nif ( target === copy ) {\ncontinue;\n}\nif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\nif ( copyIsArray ) {\ncopyIsArray = false;\nclone = src && jQuery.isArray(src) ? src : [];\n} else {\nclone = src && jQuery.isPlainObject(src) ? src : {};\n}\ntarget[ name ] = jQuery.extend( deep, clone, copy );\n} else if ( copy !== undefined ) {\ntarget[ name ] = copy;\n}\n}\n}\n}\nreturn target;\n};\njQuery.extend({\nnoConflict: function( deep ) {\nif ( window.$ === jQuery ) {\nwindow.$ = _$;\n}\nif ( deep && window.jQuery === jQuery ) {\nwindow.jQuery = _jQuery;\n}\nreturn jQuery;\n},\nisReady: false,\nreadyWait: 1,\nholdReady: function( hold ) {\nif ( hold ) {\njQuery.readyWait++;\n} else {\njQuery.ready( true );\n}\n},\nready: function( wait ) {\nif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\nreturn;\n}\nif ( !document.body ) {\nreturn setTimeout( jQuery.ready );\n}\njQuery.isReady = true;\nif ( wait !== true && --jQuery.readyWait > 0 ) {\nreturn;\n}\nreadyList.resolveWith( document, [ jQuery ] );\nif ( jQuery.fn.trigger ) {\njQuery( document ).trigger(\"ready\").off(\"ready\");\n}\n},\nisFunction: function( obj ) {\nreturn jQuery.type(obj) === \"function\";\n},\nisArray: Array.isArray || function( obj ) {\nreturn jQuery.type(obj) === \"array\";\n},\nisWindow: function( obj ) {\nreturn obj != null && obj == obj.window;\n},\nisNumeric: function( obj ) {\nreturn !isNaN( parseFloat(obj) ) && isFinite( obj );\n},\ntype: function( obj ) {\nif ( obj == null ) {\nreturn String( obj );\n}\nreturn typeof obj === \"object\" || typeof obj === \"function\" ?\nclass2type[ core_toString.call(obj) ] || \"object\" :\ntypeof obj;\n},\nisPlainObject: function( obj ) {\nif ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\nreturn false;\n}\ntry {\nif ( obj.constructor &&\n!core_hasOwn.call(obj, \"constructor\") &&\n!core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\nreturn false;\n}\n} catch ( e ) {\nreturn false;\n}\nvar key;\nfor ( key in obj ) {}\nreturn key === undefined || core_hasOwn.call( obj, key );\n},\nisEmptyObject: function( obj ) {\nvar name;\nfor ( name in obj ) {\nreturn false;\n}\nreturn true;\n},\nerror: function( msg ) {\nthrow new Error( msg );\n},\nparseHTML: function( data, context, keepScripts ) {\nif ( !data || typeof data !== \"string\" ) {\nreturn null;\n}\nif ( typeof context === \"boolean\" ) {\nkeepScripts = context;\ncontext = false;\n}\ncontext = context || document;\nvar parsed = rsingleTag.exec( data ),\nscripts = !keepScripts && [];\nif ( parsed ) {\nreturn [ context.createElement( parsed[1] ) ];\n}\nparsed = jQuery.buildFragment( [ data ], context, scripts );\nif ( scripts ) {\njQuery( scripts ).remove();\n}\nreturn jQuery.merge( [], parsed.childNodes );\n},\nparseJSON: function( data ) {\nif ( window.JSON && window.JSON.parse ) {\nreturn window.JSON.parse( data );\n}\nif ( data === null ) {\nreturn data;\n}\nif ( typeof data === \"string\" ) {\ndata = jQuery.trim( data );\nif ( data ) {\nif ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n.replace( rvalidtokens, \"]\" )\n.replace( rvalidbraces, \"\")) ) {\nreturn ( new Function( \"return \" + data ) )();\n}\n}\n}\njQuery.error( \"Invalid JSON: \" + data );\n},\nparseXML: function( data ) {\nvar xml, tmp;\nif ( !data || typeof data !== \"string\" ) {\nreturn null;\n}\ntry {\nif ( window.DOMParser ) { // Standard\ntmp = new DOMParser();\nxml = tmp.parseFromString( data , \"text/xml\" );\n} else { // IE\nxml = new ActiveXObject( \"Microsoft.XMLDOM\" );\nxml.async = \"false\";\nxml.loadXML( data );\n}\n} catch( e ) {\nxml = undefined;\n}\nif ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\njQuery.error( \"Invalid XML: \" + data );\n}\nreturn xml;\n},\nnoop: function() {},\nglobalEval: function( data ) {\nif ( data && jQuery.trim( data ) ) {\n( window.execScript || function( data ) {\nwindow[ \"eval\" ].call( window, data );\n} )( data );\n}\n},\ncamelCase: function( string ) {\nreturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n},\nnodeName: function( elem, name ) {\nreturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n},\neach: function( obj, callback, args ) {\nvar value,\ni = 0,\nlength = obj.length,\nisArray = isArraylike( obj );\nif ( args ) {\nif ( isArray ) {\nfor ( ; i < length; i++ ) {\nvalue = callback.apply( obj[ i ], args );\nif ( value === false ) {\nbreak;\n}\n}\n} else {\nfor ( i in obj ) {\nvalue = callback.apply( obj[ i ], args );\nif ( value === false ) {\nbreak;\n}\n}\n}\n} else {\nif ( isArray ) {\nfor ( ; i < length; i++ ) {\nvalue = callback.call( obj[ i ], i, obj[ i ] );\nif ( value === false ) {\nbreak;\n}\n}\n} else {\nfor ( i in obj ) {\nvalue = callback.call( obj[ i ], i, obj[ i ] );\nif ( value === false ) {\nbreak;\n}\n}\n}\n}\nreturn obj;\n},\ntrim: core_trim && !core_trim.call(\"\\uFEFF\\xA0\") ?\nfunction( text ) {\nreturn text == null ?\n\"\" :\ncore_trim.call( text );\n} :\nfunction( text ) {\nreturn text == null ?\n\"\" :\n( text + \"\" ).replace( rtrim, \"\" );\n},\nmakeArray: function( arr, results ) {\nvar ret = results || [];\nif ( arr != null ) {\nif ( isArraylike( Object(arr) ) ) {\njQuery.merge( ret,\ntypeof arr === \"string\" ?\n[ arr ] : arr\n);\n} else {\ncore_push.call( ret, arr );\n}\n}\nreturn ret;\n},\ninArray: function( elem, arr, i ) {\nvar len;\nif ( arr ) {\nif ( core_indexOf ) {\nreturn core_indexOf.call( arr, elem, i );\n}\nlen = arr.length;\ni = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\nfor ( ; i < len; i++ ) {\nif ( i in arr && arr[ i ] === elem ) {\nreturn i;\n}\n}\n}\nreturn -1;\n},\nmerge: function( first, second ) {\nvar l = second.length,\ni = first.length,\nj = 0;\nif ( typeof l === \"number\" ) {\nfor ( ; j < l; j++ ) {\nfirst[ i++ ] = second[ j ];\n}\n} else {\nwhile ( second[j] !== undefined ) {\nfirst[ i++ ] = second[ j++ ];\n}\n}\nfirst.length = i;\nreturn first;\n},\ngrep: function( elems, callback, inv ) {\nvar retVal,\nret = [],\ni = 0,\nlength = elems.length;\ninv = !!inv;\nfor ( ; i < length; i++ ) {\nretVal = !!callback( elems[ i ], i );\nif ( inv !== retVal ) {\nret.push( elems[ i ] );\n}\n}\nreturn ret;\n},\nmap: function( elems, callback, arg ) {\nvar value,\ni = 0,\nlength = elems.length,\nisArray = isArraylike( elems ),\nret = [];\nif ( isArray ) {\nfor ( ; i < length; i++ ) {\nvalue = callback( elems[ i ], i, arg );\nif ( value != null ) {\nret[ ret.length ] = value;\n}\n}\n} else {\nfor ( i in elems ) {\nvalue = callback( elems[ i ], i, arg );\nif ( value != null ) {\nret[ ret.length ] = value;\n}\n}\n}\nreturn core_concat.apply( [], ret );\n},\nguid: 1,\nproxy: function( fn, context ) {\nvar args, proxy, tmp;\nif ( typeof context === \"string\" ) {\ntmp = fn[ context ];\ncontext = fn;\nfn = tmp;\n}\nif ( !jQuery.isFunction( fn ) ) {\nreturn undefined;\n}\nargs = core_slice.call( arguments, 2 );\nproxy = function() {\nreturn fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );\n};\nproxy.guid = fn.guid = fn.guid || jQuery.guid++;\nreturn proxy;\n},\naccess: function( elems, fn, key, value, chainable, emptyGet, raw ) {\nvar i = 0,\nlength = elems.length,\nbulk = key == null;\nif ( jQuery.type( key ) === \"object\" ) {\nchainable = true;\nfor ( i in key ) {\njQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n}\n} else if ( value !== undefined ) {\nchainable = true;\nif ( !jQuery.isFunction( value ) ) {\nraw = true;\n}\nif ( bulk ) {\nif ( raw ) {\nfn.call( elems, value );\nfn = null;\n} else {\nbulk = fn;\nfn = function( elem, key, value ) {\nreturn bulk.call( jQuery( elem ), value );\n};\n}\n}\nif ( fn ) {\nfor ( ; i < length; i++ ) {\nfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n}\n}\n}\nreturn chainable ?\nelems :\nbulk ?\nfn.call( elems ) :\nlength ? fn( elems[0], key ) : emptyGet;\n},\nnow: function() {\nreturn ( new Date() ).getTime();\n}\n});\njQuery.ready.promise = function( obj ) {\nif ( !readyList ) {\nreadyList = jQuery.Deferred();\nif ( document.readyState === \"complete\" ) {\nsetTimeout( jQuery.ready );\n} else if ( document.addEventListener ) {\ndocument.addEventListener( \"DOMContentLoaded\", completed, false );\nwindow.addEventListener( \"load\", completed, false );\n} else {\ndocument.attachEvent( \"onreadystatechange\", completed );\nwindow.attachEvent( \"onload\", completed );\nvar top = false;\ntry {\ntop = window.frameElement == null && document.documentElement;\n} catch(e) {}\nif ( top && top.doScroll ) {\n(function doScrollCheck() {\nif ( !jQuery.isReady ) {\ntry {\ntop.doScroll(\"left\");\n} catch(e) {\nreturn setTimeout( doScrollCheck, 50 );\n}\ndetach();\njQuery.ready();\n}\n})();\n}\n}\n}\nreturn readyList.promise( obj );\n};\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\nclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});"
    end

  end
end
